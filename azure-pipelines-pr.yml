pr:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: 'aumanjoa/chronas-api:ci-$(build.buildId)'
  latestImageName: 'aumanjoa/chronas-api'
  dockerHubUsername: 'aumanjoa'

steps:
- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: SonarCloud
    organization: 'aumanjoa-github'
    scannerMode: CLI
    configMode: manual
    cliProjectKey: 'chronas-api'
    cliProjectName: 'Chronas API'
    cliProjectVersion: '$(Build.BuildNumber)'
    cliSources: server
    extraProperties: |
     # Additional properties that will be passed to the scanner, 
     # Put one key=value per line, example:
      sonar.tests=server
      sonar.coverage.exclusions=**/tests/**
      sonar.test.inclusions=**/tests/**
      sonar.javascript.lcov.reportPaths=coverage/lcov.info
     
- task: NodeTool@0
  displayName: 'Use Node 10.x'
  inputs:
    versionSpec: 10.x

- script: |
    npm cache verify
    npm install
    npm test
    npm run test:coverage 

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- script: |
    docker build -f Dockerfile -t $(imageName) --build-arg BUILD_ID=$(Build.BuildId) .
  displayName: 'docker build '

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'kubernetes'
    artifactName: k8s

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'PostmanTests'
    artifactName: postmanTests

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'